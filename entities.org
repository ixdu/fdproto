* Сущности, описание
  Каждая сущность описывается в виде json файла. 
  Над сущностями определены следующие действия:
  - добавить
  - показать
  - измениить
  - удалить
  - переключиться на другую версию
  
**  Определены следующие сущности:
*** страна
    Название текст
    Описание текст
    Значок изображение, png
    Контейнер для сущностей: регион
*** регион
    Название текст
    Описание текст
    Код региона текст
    Значок изображение, png
    Контейнер для сущностей: город
*** город
    Название текст
    Описание текст
    Значок изображение, png
    Контейнер для сущностей: архив
*** архив
    Название текст
    Описание текст
    Адрес текст
    Значок изображение, png
    Контейнер для сущностей: фонд
*** фонд
    Название текст
    Описание текст
    Температура число
    Значок изображение, png
    Контейнер для сущностей: дело
*** дело
    Название текст
    Описание текст
    Количество документов число
    Значок изображение, png
    Контейнер для сущностей: дело
*** опись
    Название текст
    Описание текст
    Значок изображение, png
    Изображение текст
*** документ
    Название текст
    Описание текст
    Значок изображение, png
    Контейнер для сущностей: страница
*** страница
    Название текст
    Описание текст
    Значок изображение, png
    Изображение текст


  


* Пример

** простой пример

   Заходим в пустую программу. Не видим иконок, нажимаем кнопку добавить. Действие кнопки узнаёт, что нет ни каких сущностей.
   Поэтому создаёт форму, где можно выбрать создание любой сущности. Выбираем страну. Код вызывает form_generator страны,
   который в свою очедь берёт json схему страны и для каждого поля вызывает gtk_field_generator соответствующего типа(строка,
   иконка, число), который использует для каждого типа определённое gtkbuilder описание. К сформированной форме, к её полям,
   привязываются универсальные обработчики, а к ним - объект сущности страны.
   Заполняем поля формы, нажимаем готово. Данные из полей заносятся в объект. Форма удаляется. Сущность добавляется к списку
   сущностей текущего контейнера. Вызывается обновление содержимого основной рабочей области. В объект текущего контейнера
   добавляется созданный объект страны. Сущность страны сохраняется в базе, модифицированный контейнер также сохраняется в базе.
   Область содержимого текущего выбранного объекта переключается на только что созданную сущность. В основной рабочей 
   области на сущность переключается фокус. Пример окончен.

   Как происходит работа с базой в данном примере:
   При старте, клиент подключается к базе и выполняет процедуру 
   
   request client_enter(client_name)
   result "result":"ok"
   
   request container_get(0) #получение корневого контейнера
   result "result":"none"

   request container_add
   
